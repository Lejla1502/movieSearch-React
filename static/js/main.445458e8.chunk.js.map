{"version":3,"sources":["movieCard.js","searchMovies.js","index.js"],"names":["MovieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","error","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","filter","map","id","Main","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAQe,SAASA,EAAT,GACd,IADkCC,EACnC,EADmCA,MAI/B,OACI,sBAAKC,UAAU,OAAf,UACgB,qBAAKA,UAAU,cACfC,IAAG,0DAAqDF,EAAMG,aAC9DC,IAAKJ,EAAMK,MAAM,WACjB,sBAAKJ,UAAU,gBAAf,UACR,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,mDAAsBL,EAAMM,kBAC/B,4BAAG,6CAAgBN,EAAMO,kBACzB,oBAAGN,UAAU,aAAb,cAA4BD,EAAMQ,kBChBnC,SAASC,IACxB,MAE4BC,mBAAS,IAFrC,mBAEWC,EAFX,KAEkBC,EAFlB,OAI4BF,mBAAS,IAJrC,mBAIUG,EAJV,KAIiBC,EAJjB,KAOUC,EAAY,uCAAE,WAAMC,GAAN,mBAAAC,EAAA,6DAEhBD,EAAEE,iBAGIC,EALU,kHAKuGR,EALvG,iDAQKS,MAAMD,GARX,cAQNE,EARM,gBASKA,EAAIC,OATT,OASNC,EATM,OAWZT,EAAUS,EAAKC,SAXH,kDAeZC,QAAQC,MAAR,MAfY,0DAAF,sDAmBlB,OACI,qCACI,uBAAMzB,UAAU,OAAO0B,SAAUZ,EAAjC,UACI,uBAAOa,QAAQ,QAAQ3B,UAAU,QAAjC,wBACA,uBAAOA,UAAU,QAAQ4B,KAAK,OAAOC,KAAK,QAC1CC,YAAY,qBAAqBC,MAAOrB,EACxCsB,SAAU,SAACjB,GAAD,OAAKJ,EAASI,EAAEkB,OAAOF,UACjC,wBAAQH,KAAK,SAAS5B,UAAU,SAAhC,uBAEJ,qBAAKA,UAAU,YAAf,SACKY,EAAOsB,QAAO,SAAAnC,GAAK,OAAEA,EAAMG,eAAaiC,KAAI,SAAApC,GAAK,OAC9C,cAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMqC,Y,ICrClDC,E,uKAIF,OACE,sBAAKrC,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,gCACA,cAACQ,EAAD,W,GAPS8B,IAAMC,WAazBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.445458e8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\n\r\n//to avoid usng extra variable i.e. movie=props.movie or {movie}=props\r\n//it is possible to define parameter as {movie} meaning\r\n//when function receives paramater it will take property movie from props\r\n//right away and use it as following in the body of function\r\nexport default function MovieCard({movie})\r\n{\r\n    //grab movie property from props; equals to movie=props.movie\r\n    //const {movie}=props;\r\n    return (\r\n        <div className=\"card\" >\r\n                        <img className=\"card--image\"\r\n                        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n                        alt={movie.title+'poster'}/>\r\n                        <div className=\"card--content\">\r\n                <h3 className=\"card--title\">{movie.title}</h3>\r\n                <p><small>RELEASE DATE: {movie.release_date}</small></p>\r\n                <p><small>RATING: {movie.vote_average}</small></p>\r\n                <p className=\"card--desc\"> {movie.overview}</p>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                \r\n      );\r\n}","import React, {useState} from 'react';\r\n\r\nimport MovieCard from \"./movieCard\";\r\n\r\n\r\nexport default function SearchMovies()\r\n{\r\n    //initial value to be empty string\r\n    const [query, setQuery]=useState('');\r\n\r\n    const[movies,setMovies]=useState([]);\r\n\r\n\r\n    const searchMovies= async(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=55916023bc876b42dec160b59b4204c0&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n        try{\r\n            const res= await fetch(url);\r\n            const data=await res.json();\r\n\r\n            setMovies(data.results);\r\n        }\r\n        catch(err)\r\n        {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={searchMovies}>\r\n                <label htmlFor=\"query\" className=\"label\">Movie Name</label>\r\n                <input className=\"input\" type=\"text\" name=\"query\" \r\n                placeholder=\"i.e. Jurassic Park\" value={query}\r\n                onChange={(e)=>setQuery(e.target.value)}></input>\r\n                <button type=\"submit\" className=\"button\">Search</button>\r\n            </form>\r\n            <div className=\"card-list\">\r\n                {movies.filter(movie=>movie.poster_path).map(movie=>(\r\n                    <MovieCard movie={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport SearchMovies from \"./searchMovies\";\n\nclass Main extends React.Component\n{\n  render()\n  {\n    return (\n      <div className=\"container\">\n          <h1 className=\"title\">React Movie Search</h1>\n          <SearchMovies/>\n    </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n//reportWebVitals();\n"],"sourceRoot":""}